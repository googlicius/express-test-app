version: '3.3'
services:
  localstack:
    image: localstack/localstack
    ports:
      - '4566:4566'
    environment:
      - SERVICES=s3
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - 'localstackdata:/tmp'
      - '/var/run/docker.sock:/var/run/docker.sock'

  #Nginx Service
  webserver:
    image: nginx:alpine
    tty: true
    ports:
      - "81:80"
      - "443:443"
    volumes:
      - ./nginx-conf:/etc/nginx/conf.d
    extra_hosts:
      - "host.docker.internal:host-gateway"

  mongo:
    image: mongo:4.2.22
    volumes:
      - mongodata:/data/db
      - ./dumps:/opt/dumps
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    command: mongod --wiredTigerCacheSizeGB 1.5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.0
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_SERVER_ID=1
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_SYNC_LIMIT=2

  broker:
    depends_on:
      - zookeeper
    image: confluentinc/cp-kafka:7.2.0
    restart: always
    ports:
      - 9092:9092
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_BROKER_ID=1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    healthcheck:
      test:
        [
          'CMD',
          'kafka-topics',
          '--list',
          '--bootstrap-server',
          'localhost:9092',
        ]
      interval: 30s
      timeout: 10s
      retries: 4

  broker-ui:
    depends_on:
      - zookeeper
      - broker
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8085:8080
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=broker:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

volumes:
  localstackdata:
  mongodata:

networks:
  app-network:
    driver: bridge
